// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model ElectoralSlate {
  id             Int       @id @default(autoincrement())
  numberVote     Int       @unique      @map("number_vote")
  candidate1     String    @map("candidate_1")
  candidate2     String?   @map("candidate_2")
  electionId     Int       
  election Election @relation(fields: [electionId],references: [id])
  votes Vote[]
  
  @@map("electoral_slate")
}

model Election {
   id         Int        @id @default(autoincrement())
   votingDate DateTime   @map("voting_date")
   maxVote    Int        @map("max_vote")
   slates ElectoralSlate[]
   tokens Token[]
  @@map("election")    
}

model Token{
     id             Int         @id @default(autoincrement())
     dateExpiration DateTime    @map("date_expiration")
     used           Int         @map("used")
     hash           String      @map("hash")
     votes Vote[]
     electionId     Int         @map("id_election")
     election Election          @relation(fields: [electionId],references: [id])
  @@map("token")  
}

model Vote{
    id      Int          @id @default(autoincrement())
    tokenId Int          @map("id_token")
    token Token          @relation(fields: [tokenId],references: [id])
    slateId Int          @map("slate_id")
    slate ElectoralSlate @relation(fields: [slateId],references: [id])
  @@map("vote")
}
